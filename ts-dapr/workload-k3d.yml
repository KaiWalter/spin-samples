apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: tracing
  namespace: default
spec:
  tracing:
    samplingRate: "1"
    zipkin:
      endpointAddress: "http://zipkin.default.svc.cluster.local:9411/api/v2/spans"
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: secretstore
spec:
  type: secretstores.kubernetes
  version: v1
  metadata: []
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: q-order-ingress
spec:
  type: bindings.azure.servicebusqueues
  version: v1
  metadata:
    - name: connectionString
      secretKeyRef:
        name: servicebus-secret
        key: connectionString
    - name: queueName
      value: q-order-ingress-spin
auth:
  secretStore: secretstore
scopes:
  - distributor
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: q-order-express-out
spec:
  type: bindings.azure.servicebusqueues
  version: v1
  metadata:
    - name: connectionString
      secretKeyRef:
        name: servicebus-secret
        key: connectionString
    - name: queueName
      value: q-order-express-spin
    - name: direction
      value: output
auth:
  secretStore: secretstore
scopes:
  - distributor
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: q-order-standard-out
spec:
  type: bindings.azure.servicebusqueues
  version: v1
  metadata:
    - name: connectionString
      secretKeyRef:
        name: servicebus-secret
        key: connectionString
    - name: queueName
      value: q-order-standard-spin
    - name: direction
      value: output
auth:
  secretStore: secretstore
scopes:
  - distributor
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: q-order-express-in
spec:
  type: bindings.azure.servicebusqueues
  version: v1
  metadata:
    - name: connectionString
      secretKeyRef:
        name: servicebus-secret
        key: connectionString
    - name: queueName
      value: q-order-express-spin
    - name: direction
      value: input
auth:
  secretStore: secretstore
scopes:
  - receiver-express
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: q-order-standard-in
spec:
  type: bindings.azure.servicebusqueues
  version: v1
  metadata:
    - name: connectionString
      secretKeyRef:
        name: servicebus-secret
        key: connectionString
    - name: queueName
      value: q-order-standard-spin
    - name: direction
      value: input
auth:
  secretStore: secretstore
scopes:
  - receiver-standard
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: express-outbox
spec:
  type: bindings.azure.blobstorage
  version: v1
  metadata:
    - name: accountName
      secretKeyRef:
        name: storage-secret
        key: accountName
    - name: accountKey
      secretKeyRef:
        name: storage-secret
        key: accountKey
    - name: containerName
      value: express-outbox
auth:
  secretStore: secretstore
scopes:
  - receiver-express
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: standard-outbox
spec:
  type: bindings.azure.blobstorage
  version: v1
  metadata:
    - name: accountName
      secretKeyRef:
        name: storage-secret
        key: accountName
    - name: accountKey
      secretKeyRef:
        name: storage-secret
        key: accountKey
    - name: containerName
      value: standard-outbox
auth:
  secretStore: secretstore
scopes:
  - receiver-standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: distributor
  template:
    metadata:
      labels:
        app: distributor
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "distributor"
        dapr.io/app-port: "80"
        dapr.io/enable-api-logging: "true"
        dapr.io/enable-app-health-check: "true"
        dapr.io/log-level: "info"
        dapr.io/config: "tracing"
        dapr.io/app-protocol: "http"
        dapr.io/placement-host-address: ""
        dapr.io/sidecar-listen-addresses: "0.0.0.0,[::]"
    spec:
      runtimeClassName: wasmtime-spin
      containers:
        - name: distributor
          image: { will be replace by deployment script }
          command: ["/"]
          env:
            - name: RUST_BACKTRACE
              value: "1"
            - name: DAPR_URL
              value: "http://localhost:3500"
          livenessProbe:
            httpGet:
              path: .well-known/spin/health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: receiver-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: receiver-express
  template:
    metadata:
      labels:
        app: receiver-express
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "receiver-express"
        dapr.io/app-port: "80"
        dapr.io/enable-api-logging: "true"
        dapr.io/enable-app-health-check: "true"
        dapr.io/log-level: "info"
        dapr.io/config: "tracing"
        dapr.io/app-protocol: "http"
        dapr.io/placement-host-address: ""
        dapr.io/sidecar-listen-addresses: "0.0.0.0,[::]"
    spec:
      runtimeClassName: wasmtime-spin
      containers:
        - name: receiver-express
          image: { will be replace by deployment script }
          command: ["/"]
          env:
            - name: RUST_BACKTRACE
              value: "1"
            - name: DAPR_URL
              value: "http://localhost:3500"
          livenessProbe:
            httpGet:
              path: .well-known/spin/health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: receiver-standard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: receiver-standard
  template:
    metadata:
      labels:
        app: receiver-standard
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "receiver-standard"
        dapr.io/app-port: "80"
        dapr.io/enable-api-logging: "true"
        dapr.io/enable-app-health-check: "true"
        dapr.io/log-level: "info"
        dapr.io/config: "tracing"
        dapr.io/app-protocol: "http"
        dapr.io/placement-host-address: ""
        dapr.io/sidecar-listen-addresses: "0.0.0.0,[::]"
    spec:
      runtimeClassName: wasmtime-spin
      containers:
        - name: receiver-standard
          image: { will be replace by deployment script }
          command: ["/"]
          env:
            - name: RUST_BACKTRACE
              value: "1"
            - name: DAPR_URL
              value: "http://localhost:3500"
          livenessProbe:
            httpGet:
              path: .well-known/spin/health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: distributor
spec:
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: dapr
      protocol: TCP
      port: 3500
      targetPort: 3500
  selector:
    app: distributor
---
apiVersion: v1
kind: Service
metadata:
  name: receiver-express
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: receiver-express
---
apiVersion: v1
kind: Service
metadata:
  name: receiver-standard
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: receiver-standard
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
      - /distributor-dapr
      - /distributor
      - /receiver-express
      - /receiver-standard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wasm-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    traefik.ingress.kubernetes.io/router.middlewares: default-strip-prefix@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - http:
        paths:
          - path: /distributor
            pathType: Prefix
            backend:
              service:
                name: distributor
                port:
                  number: 80
          - path: /distributor-dapr
            pathType: Prefix
            backend:
              service:
                name: distributor
                port:
                  number: 3500
          - path: /receiver-express
            pathType: Prefix
            backend:
              service:
                name: receiver-express
                port:
                  number: 80
          - path: /receiver-standard
            pathType: Prefix
            backend:
              service:
                name: receiver-standard
                port:
                  number: 80
