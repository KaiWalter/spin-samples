apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: distributor
  template:
    metadata:
      labels:
        app: distributor
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "distributor"
        dapr.io/app-port: "80"
        dapr.io/enable-api-logging: "true"
        dapr.io/enable-app-health-check: "true"
        dapr.io/log-level: "warn"
    spec:
      runtimeClassName: wasmtime-spin
      containers:
        - name: distributor
          image: { will be replace by deployment script }
          command: ["/"]
          env:
            - name: RUST_BACKTRACE
              value: "1"
            - name: DAPR_URL
              value: "http://localhost:3500"
          livenessProbe:
            httpGet:
              path: .well-known/spin/health
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: distributor
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: distributor
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
      - /distributor
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wasm-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    traefik.ingress.kubernetes.io/router.middlewares: default-strip-prefix@kubernetescrd
spec:
  ingressClassName: traefik
  rules:
    - http:
        paths:
          - path: /distributor
            pathType: Prefix
            backend:
              service:
                name: distributor
                port:
                  number: 80
